#!/bin/sh

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echog() {
	printf "${RED}${STEP_INDEX}${NC} : ${GREEN}$1${NC}"
	sleep 0.5
}
echor() {
	printf "${RED}${STEP_INDEX}${NC} : ${RED}$1${NC}"
	sleep 0.5
}

echog "Phase 1"
pacman -Syy reflector --noconfirm && reflector --country 'Canada,United States,France,Germany,Australia' --latest 5 --sort rate --save /etc/pacman.d/mirrorlist

sudo pacman -q --noprogressbar -Syu git base-devel --noconfirm
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg --noprogressbar -si --noconfirm

###########################

echog "Phase 2"
yay -q --noprogressbar -Syu gtk3-nocsd-git --noconfirm
sudo cp -r '/usr/share/doc/gtk3-nocsd/etc/xinit/xinitrc.d/30-gtk3-nocsd.sh' '/etc/X11/xinit/xinitrc.d/30-gtk3-nocsd.sh'

echog "Phase 3"
# Renaming xdg-open from container because it will run host applications (like steam) instead of internal ones
sudo mv /usr/local/bin/xdg-open /usr/local/bin/xdg-open2

# Setting up arch
echo "[multilib]" | sudo tee -a /etc/pacman.conf > /dev/null 2>&1
echo "Include = /etc/pacman.d/mirrorlist" | sudo tee -a /etc/pacman.conf > /dev/null 2>&1
echo "en_US.UTF-8 UTF-8" | sudo tee -a /etc/locale.gen > /dev/null 2>&1
sudo pacman-key --init
echo "LANG=en_US.UTF-8" | sudo tee /etc/locale.conf > /dev/null 2>&1
echo "LC_ALL=en_US.UTF-8" | sudo tee /etc/locale.conf > /dev/null 2>&1
echo "export LANG=en_US.UTF-8 | tee -a ~/.bashrc > /dev/null 2>&1
echo "export LC_ALL=en_US.UTF-8 | tee -a ~/.bashrc > /dev/null 2>&1
yay -q --noprogressbar -Syu glibc lib32-glibc xdg-utils qt5-tools qt5-multimedia at-spi2-core lib32-at-spi2-core tar curl --noconfirm

echog "Phase 4"

yay -Syyu --noconfirm
	
echog "### activating multilib..."
perl -0777 -i.orig -pe "s/#\[multilib\]\n#Include = \/etc\/pacman.d\/mirrorlist/\[multilib\]\nInclude = \/etc\/pacman.d\/mirrorlist/" /etc/pacman.conf
	
echog "### updating pacman to load multilib..."
pacman -Sy --noconfirm
	
echog "Installing packages for base functionality."
yay -q --noprogressbar -Syu git vim base-devel noto-fonts xdg-user-dirs fuse libx264 sdl2 libva-utils xorg-server --noconfirm
	
echog "Installing audio and driver packages."

if [ "$GPU" = "amd" ];then
	echo '	yay -q --noprogressbar -Syu libva-mesa-driver vulkan-radeon lib32-vulkan-radeon lib32-libva-mesa-driver --noconfirm' >> "${phase_file_4}"
elif [ "$GPU" = "nvidia" ];then
   	echo '	echog "Using host system driver mounts, not installing nvidia drivers."' >> "${phase_file_4}"
   	if [ "$MULTI_GPU" = "1" ];then
     		echo '	echog "Installing prime-run , games on your dedicated GPU."' >> "${phase_file_4}"
     		echo '	yay -q --noprogressbar -Syu nvidia-prime --noconfirm --assume-installed nvidia-utils' >> "${phase_file_4}"
   	fi
elif [ "$GPU" = "intel" ];then
   	yay -q --noprogressbar -Syu libva-mesa-driver vulkan-intel lib32-vulkan-intel intel-media-driver lib32-libva-intel-driver libva-intel-driver --noconfirm
   	# Thanks marioeatsdirt for tip!
   	echog "Installing older vulkan-intel driver as newest one (24.0 at the moment of writing) doesnt work on Intel."
  	yay --noprogressbar -U \
     		https://archive.archlinux.org/packages/v/vulkan-intel/vulkan-intel-23.1.4-2-x86_64.pkg.tar.zst \
     		https://archive.archlinux.org/packages/l/lib32-vulkan-intel/lib32-vulkan-intel-23.1.4-2-x86_64.pkg.tar.zst --noconfirm
   	echog "Pinning intel vulkan drivers"
   	sudo sed -i "s/.*IgnorePkg.*/IgnorePkg = vulkan-intel lib32-vulkan-intel/g" /etc/pacman.conf
fi

if [ "$AUDIO_SYSTEM" = "pipewire" ];then
   	echo '	yay -q --noprogressbar -Syu lib32-pipewire pipewire pipewire-pulse pipewire-alsa pipewire-jack wireplumber --noconfirm' >> "${phase_file_4}"
elif [ "$AUDIO_SYSTEM" = "pulseaudio" ];then
   	echo '	yay -q --noprogressbar -Syu pulseaudio pulseaudio-alsa --noconfirm' >> "${phase_file_4}"
fi
echog "Installing base packages and Steam."
		
yay -q --noprogressbar -Syu steam --noconfirm --assume-installed vulkan-driver --assume-installed lib32-vulkan-driver

# Define proper steam desktop file
mkdir ~/.config
xdg-mime default steam.desktop x-scheme-handler/steam
		
echog "add different libraries and wine-staging (have to be installed before winetricks) to install list"
list_of_pakages_2_install="wine giflib lib32-giflib libpng lib32-libpng libldap lib32-libldap gnutls lib32-gnutls mpg123 lib32-mpg123 openal lib32-openal v4l-utils lib32-v4l-utils libpulse lib32-libpulse libgpg-error lib32-libgpg-error alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib libjpeg-turbo lib32-libjpeg-turbo sqlite lib32-sqlite libxcomposite lib32-libxcomposite libxinerama lib32-libgcrypt libgcrypt lib32-libxinerama ncurses lib32-ncurses opencl-icd-loader lib32-opencl-icd-loader libxslt lib32-libxslt libva lib32-libva gtk3 lib32-gtk3 gst-plugins-base-libs lib32-gst-plugins-base-libs vulkan-icd-loader lib32-vulkan-icd-loader"
		
echog " add dependencies for a lot of games to install list"
list_of_pakages_2_install="${list_of_pakages_2_install} wine-gecko wine-mono lib32-gnutls lib32-libldap lib32-libgpg-error lib32-sqlite lib32-libpulse vkd3d lib32-vkd3d lib32-libvdpau libvdpau lib32-libxml2 lib32-sdl2 lib32-freetype2 lib32-dbus sdl_image sdl_mixer"
		
echog " add lutris winetricks gamemode to install list"
list_of_pakages_2_install="${list_of_pakages_2_install} lutris winetricks gamemode lib32-gamemode"
		
echog " add xboxdrv mangohud goverlay bottles to install list"
list_of_pakages_2_install="${list_of_pakages_2_install} mangohud goverlay"

echog " add bottles to install list"
list_of_pakages_2_install="${list_of_pakages_2_install} bottles"
	
echog "install install list."
yay -q --noprogressbar -Syu ${list_of_pakages_2_install} --noconfirm
