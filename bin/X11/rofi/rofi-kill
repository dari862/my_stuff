#!/bin/sh
# if this line exist script will be part of hub script.

# Description: Search for a process to kill.
set -e
. "/usr/share/my_stuff/lib/common/WM"
. "${Distro_config_file}"

opt="${1-}"
opt2="${2-}"

main() {
    # Running ps to get running processes and display in rofi.
    # In this script we use a variable called rofi -no-config -no-lazy-grab -dmenu -r -i -l 20 -theme "$HOME/.config/rofi/$ROFI_STYLE"/runner.rasi, in your scripts, you
    # should just write dmenu or rofi or whatever launcher you use.
    selected="$(ps --user "$USER" -F | \
                rofi -no-config -no-lazy-grab -dmenu -r -i -l 20 -theme "$HOME/.config/rofi/$ROFI_STYLE"/runner.rasi -p "Search for process to kill:" "$@" | \
                awk '{print $2" "$11}')";

    # Nested 'if' statements.  The outer 'if' statement is what to do
    # when we select one of the 'selected' options listed in rofi.
    if [ -n "$selected" ];then
        # Piping No/Yes into rofi as a safety measure, in case you
        answer="$(printf "No\nYes" | rofi -no-config -no-lazy-grab -dmenu -r -i -l 20 -theme "$HOME/.config/rofi/$ROFI_STYLE"/runner.rasi -p "Kill $selected?" "$@")"

        if [ "$answer" = "Yes" ];then
            # This echo command prints everything before the first space.
	    # Luke Smith has a video on why this is most efficient in this case
	    # An alternative way to do it would be with awk or cut, both are less 
            # efficient however.         
            kill -9 "${selected%% *}"
            notify-send "${selected}" "Process $selected has been killed."
            echo "Process $selected has been killed." && exit 0
        else
	    # We want this script to exit with a 1 and not 0 because 1 means
	    # an error, so this can be handled by other scripts better
            printf "Program terminated." && exit 1
        fi
    fi
}

if [ -n "$opt" ];then
	[ -z "$opt2" ] && opt2="Process $opt has been killed."
	kill_process.sh "$opt" && notify-send "$opt" "$opt2"
else
	main "$@"
fi
