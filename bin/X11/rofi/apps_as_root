#!/bin/sh
set -eu
. "/usr/share/my_stuff/lib/common/Distro_path"
locate_command="${1:-}"
shift
__arg="$@"

_command="$(which $locate_command)"
_full_command="$_command $__arg"

HISTFILE=/dev/null
set +x

rofi_ask_passowrd(){
	. "${__distro_path_root}/lib/common/WM"
	. "${Distro_config_file}"
	ask_for_pass() {
    	rofi -dmenu\
   			-password\
   			-i\
   			-no-fixed-num-lines\
   			-p "[ï€£] Enter Superuser Password, ${USER}: "\
   			-theme "$HOME/.config/rofi/$ROFI_STYLE"/askpass.rasi
	}
	
	while :; do
		password="$(ask_for_pass)"
		[ $? -ne 0 ] && (
			rofi -e "Authentication cancelled." -theme "$HOME/.config/rofi/${ROFI_STYLE:-default}/askpass.rasi"
			return 2
		)
		[ -n "$password" ] && break
		rofi -e "Empty password." -theme "$HOME/.config/rofi/${ROFI_STYLE:-default}/askpass.rasi"
	done
	
	printf '%s\n' "$password"
	unset password
}

password="$(rofi_ask_passowrd)" || ( 
	unset password
	exit 2
)
if ! command -v expect >/dev/null 2>&1 && command -v doas >/dev/null 2>&1;then
	popup_terminal --superuser "$_full_command"
elif command -v doas >/dev/null 2>&1;then
	# work on this : remove expect
	expect <<-EOF
	# don't mind the man behind the curtain
	log_user 0
	
	# spawn doas operation
	spawn doas $_full_command
	
	# send password and execute command
	expect {
			"doas*password:" {
				send -- "$password\r"
				expect \r
				log_user 1
				expect eof
			}
	}
	EOF
else
	sudo -S $_full_command >/dev/null 2>&1 <<-EOF || (rofi -e "Superuser password was incorrect." -theme "$HOME/.config/rofi/$ROFI_STYLE"/askpass.rasi && return 1)
	$password
	EOF
fi
