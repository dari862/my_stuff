#!/bin/bash
# if this line exist script will be part of hub script.
# if this line exist script will be part of gui scripts.new_name=USB_formatter
# need superuser : called by popup_terminal
__user="${1:-}"
__distro_path_lib="${2:-$__distro_path_lib}"
unalias -a
if [ "$(id -u)" -ne 0 ]; then
    popup_terminal --superuser "$0 $USER $__distro_path_lib"
    exit
elif [ -z "$__user" ];then
    printf "❌ This script should never be run as super user."
    exit 1
fi

. "$__distro_path_lib"
. "${__distro_path_root}/lib/common/WM"
. "/home/$__user/$Distro_config_dir_name"
RASI_DIR="/home/$__user/.config/rofi/$ROFI_STYLE"
RASI_PATH="${RASI_DIR}/runner.rasi"

__msg() {
	__massage="$(printf "$2")"
    printf "$1" | rofi -dmenu -p "$__massage" -theme "$RASI_PATH"
}

_no_choice_msg() {
	__massage="$(printf "$1")"
    rofi -e "$__massage" -theme "$RASI_DIR/massage.rasi"
}

formatmenu () {
    if [ -z "$1" ]; then
        _no_choice_msg "	Error	\n\n	You must select a USB key to use.	\n	Press Enter to return to main menu.\n	"
        mainmenu
        exit 0
    fi

   erase_choice="$(__msg "yes\nno" "WARNING:\nThis will completely erase /dev/$1.\nProceed? (yes/no)")"
   
   if [ "$erase_choice" = "yes" ];then
     	mount | grep "/dev/$1" | awk '{print $1}' | while read line; do
        	umount "$line"
        	sleep 1
    	done
    	if mkfs.vfat -F 32 -I -n "$2" -v "/dev/$1" >/dev/null 2>&1;then
    		_no_choice_msg "	Done	\n\n	USB key formatting completed.	\n	Press Enter to exit.\n	"
    	else
    		_no_choice_msg "	Failed	\n\n	USB key formatting failed.	\n	Press Enter to exit.\n	"
    	fi
    	exit 0
    elif [ "$erase_choice" = "no" ];then
    	exit 0
    else
    	mainmenu
		exit
   fi
}

mainmenu () {
    DEVS=$(ls -l /dev/disk/by-id/*usb* 2>/dev/null | awk -F "/" '!/part/ {print $NF}' | sort -u)

    if [ -z "$DEVS" ]; then
        _no_choice_msg "	Notice	\n\n	No USB keys found.	\n	Insert a USB key and try again.\n	"
        exit 0
    fi

    MENU=""
    for i in $DEVS; do
        SIZE=$(grep -m 1 "$i" /proc/partitions | awk '{print $3}')
        [ -n "$SIZE" ] && MENU="$MENU$i - ${SIZE}KB\n"
    done

    CHOICE=$(__msg "$MENU" "Select USB Device" | awk '{print $1}')
    [ -z "$CHOICE" ] && exit 0

    LABEL=$(__msg "" "Enter USB Label (Max 11 chars)")
    [ -z "$LABEL" ] && LABEL="USBDISK"
    LABEL="${LABEL:0:11}"

    formatmenu "$CHOICE" "$LABEL"
}

mainmenu
