#!/bin/bash
# if this line exist script will be part of hub script.
# Default Values
. "$__distro_path_lib"
. "${__distro_path_root}/lib/common/WM"

rofi_network_manager_config="${script_config_path}/network-manager-script.ini"
languages_lib_dir="${__distro_path_root}/lib/languages/network-manager-script"
networking_lib="${__distro_path_root}/lib/networking_lib.sh"
SELECTION_PREFIX="~"

rofi_menu() {
	if [[ ${#WIRELESS_INTERFACES[@]} -gt "1" ]]; then
		OPTIONS="${OPTIONS}${SELECTION_PREFIX}${SELECTION_CHANGE_WIFI_INTERFACE}\n${SELECTION_PREFIX}${SELECTION_MORE_OPTIONS}${SELECTION_BLUETOOTH_OPTIONS}"
	else
		OPTIONS="${OPTIONS}${SELECTION_PREFIX}${SELECTION_MORE_OPTIONS}${SELECTION_BLUETOOTH_OPTIONS}"
	fi

	if [[ "$WIRED_CON_STATE" == "connected" ]]; then
		PROMPT="${WIRED_INTERFACES_PRODUCT}[$WIRED_INTERFACES]"
	else
		PROMPT="${WIRELESS_INTERFACES_PRODUCT[WLAN_INT]}[${WIRELESS_INTERFACES[WLAN_INT]}]"
	fi

	SELECTION=$(echo -e "$OPTIONS" | rofi_cmd "$OPTIONS" $WIDTH_FIX_MAIN "-a 0")
	SSID=$(echo "$SELECTION" | sed "s/\s\{2,\}/\|/g" | awk -F "|" '{print $1}')
	selection_action
}

change_wireless_interface() {
	if [[ ${#WIRELESS_INTERFACES[@]} -eq "2" ]]; then
		if [[ $WLAN_INT -eq "0" ]]; then
			WLAN_INT=1
		else
			WLAN_INT=0
		fi
	else
		LIST_WLAN_INT=""
		for i in "${!WIRELESS_INTERFACES[@]}"; do
			LIST_WLAN_INT=("${LIST_WLAN_INT[@]}${WIRELESS_INTERFACES_PRODUCT[$i]}[${WIRELESS_INTERFACES[$i]}]\n")
		done
		LIST_WLAN_INT[-1]=${LIST_WLAN_INT[-1]::-2}
		CHANGE_WLAN_INT=$(echo -e "${LIST_WLAN_INT[@]}" | rofi_cmd "${LIST_WLAN_INT[@]}" $WIDTH_FIX_STATUS)
		for i in "${!WIRELESS_INTERFACES[@]}"; do
			if [[ $CHANGE_WLAN_INT == "${WIRELESS_INTERFACES_PRODUCT[$i]}[${WIRELESS_INTERFACES[$i]}]" ]]; then
				WLAN_INT=$i
				break
			fi
		done
	fi
	change_interface_state
	rofi_menu
}

scan_options() {
	scan
	rofi_menu
}

enter_passwword() {
	PROMPT="$PROMPT_PASSWORD" && PASS=$(echo "$PASSWORD_ENTER" | rofi_cmd "$PASSWORD_ENTER" 4 "-password")
}

enter_ssid() {
	PROMPT="$PROMPT_SSID" && SSID=$(rofi_cmd "" 40)
}

status() {
	change_status
	echo -e "$OPTIONS" | rofi_cmd "$OPTIONS" $WIDTH_FIX_STATUS "" "mainbox{children:[listview];}"
}

ssid_manual() {
	enter_ssid
	if [[ -n $SSID ]]; then
		enter_passwword
		if [[ -n "$PASS" ]] && [[ "$PASS" != "$PASSWORD_ENTER" ]]; then
			connect "$SSID" "$PASS"
		else
			stored_connection "$SSID"
		fi
	fi
}

ssid_hidden() {
	enter_ssid
	if [[ -n $SSID ]]; then
		enter_passwword && check_wifi_connected
		[[ "$PASS" != "$PASSWORD_ENTER" ]] && connect2hiddenSSID "$SSID" "$PASS"
	fi
}

share_pass() {
	create_share_pass
	SELECTION=$(echo -e "$OPTIONS" | rofi_cmd "$OPTIONS" $WIDTH_FIX_STATUS "-a -1" "mainbox{children:[listview];}")
	selection_action
}

gen_qrcode() {
	DIRECTIONS=("Center" "Northwest" "North" "Northeast" "East" "Southeast" "South" "Southwest" "West")
	gen_qrcode_file
	rofi_cmd "" "0" "" "entry{enabled:false;}window{location:"${DIRECTIONS[QRCODE_LOCATION]}";border-radius:6mm;padding:1mm;width:100mm;height:100mm;
	background-image:url(\"$QRCODE_DIR$SSID.png\",both);}"
}

manual_hidden() {
	OPTIONS="${SELECTION_PREFIX}${SELECTION_MANUAL}\n${SELECTION_PREFIX}${SELECTION_HIDDEN}" && SELECTION=$(echo -e "$OPTIONS" | rofi_cmd "$OPTIONS" $WIDTH_FIX_STATUS "" "mainbox{children:[listview];}")
	selection_action
}

vpn() {
	vpn_status
	VPN_ACTION=$(echo -e "$OPTIONS" | rofi_cmd "$OPTIONS" "$WIDTH_FIX_STATUS" "" "mainbox {children:[listview];}")
	vpn_action
}

more_options() {
	create_more_options
	SELECTION=$(echo -e "$OPTIONS" | rofi_cmd "$OPTIONS" "$WIDTH_FIX_STATUS" "" "mainbox {children:[listview];}")
	selection_action
}

selection_action() {
	case "$SELECTION" in
	"${SELECTION_PREFIX}${SELECTION_DISCONECT}") disconnect "$NOTIFICATION_WIFI_TILE_TERMINATED" ;;
	"${SELECTION_PREFIX}${SELECTION_SCAN}") scan_options ;;
	"${SELECTION_PREFIX}${SELECTION_STATUS}") status ;;
	"${SELECTION_PREFIX}${SELECTION_SHARE}") share_pass ;;
	"${SELECTION_PREFIX}${SELECTION_MANUAL_HIDDEN}") manual_hidden ;;
	"${SELECTION_PREFIX}${SELECTION_MANUAL}") ssid_manual ;;
	"${SELECTION_PREFIX}${SELECTION_HIDDEN}") ssid_hidden ;;
	"${SELECTION_PREFIX}${SELECTION_WIFI_ON}") change_wifi_state "$NOTIFICATION_WIFI_TILE" "$NOTIFICATION_WIFI_ENABLE" "on" ;;
	"${SELECTION_PREFIX}${SELECTION_WIFI_OFF}") change_wifi_state "$NOTIFICATION_WIFI_TILE" "$NOTIFICATION_WIFI_DISABLE" "off" ;;
	"${SELECTION_PREFIX}${SELECTION_ETH_OFF}") change_wired_state "$NOTIFICATION_WIRED_TITLE" "$NOTIFICATION_WIRED_DISBALE" "disconnect" "${WIRED_INTERFACES}" ;;
	"${SELECTION_PREFIX}${SELECTION_ETH_ON}") change_wired_state "$NOTIFICATION_WIRED_TITLE" "$NOTIFICATION_WIRED_ENABLE" "connect" "${WIRED_INTERFACES}" ;;
	"$SELECTION_WIFI_DISABLED") ;;
	"$SELECTION_ETH_UNAVAILBLE") ;;
	"$SELECTION_ETH_INITIALIZING") ;;
	"${SELECTION_PREFIX}${SELECTION_CHANGE_WIFI_INTERFACE}") change_wireless_interface ;;
	"${SELECTION_PREFIX}${SELECTION_RESTAT_NETWORK}") net_restart "$NOTIFICATION_NETWORK_TITLE" "$NOTIFICATION_NETWORK_RESTART" ;;
	"${SELECTION_PREFIX}${SELECTION_QRCODE}") gen_qrcode ;;
	"${SELECTION_PREFIX}${SELECTION_MORE_OPTIONS}") more_options ;;
	"${SELECTION_PREFIX}${SELECTION_OPEN_EDITOR}") nm-connection-editor ;;
	"${SELECTION_PREFIX}${SELECTION_VPN}") vpn ;;
	"${SELECTED_BLUETOOTH_OPTIONS}") rofi-bluetooth ;;
	*)
		if [[ -n "$SELECTION" ]] && [[ "$WIFI_LIST" =~ .*"$SELECTION".* ]]; then
			if [[ "$SSID" == "*" ]]; then
				SSID=$(echo "$SELECTION" | sed "s/\s\{2,\}/\|/g " | awk -F "|" '{print $3}')
			fi

			if [[ "$ACTIVE_SSID" == "$SSID" ]]; then
				UP_SAVEED_SSID
			else
				if [[ "$SELECTION" =~ "WPA2" ]] || [[ "$SELECTION" =~ "WEP" ]]; then
					enter_passwword
				fi

				if [[ -n "$PASS" ]] && [[ "$PASS" != "$PASSWORD_ENTER" ]]; then
					connect "$SSID" "$PASS"
				else
					stored_connection "$SSID"
				fi
			fi
		fi
		;;
	esac
}

main() {
	initialization && rofi_menu
}

# main
. "${networking_lib}"
. "${Distro_config_file}"
. "${rofi_network_manager_config}"

if [ -f "${languages_lib_dir}/${LANGUAGE}.lang" ];then
	. "${languages_lib_dir}/${LANGUAGE}.lang"
else
	. "${languages_lib_dir}/english.lang"
fi

if [ -z "$LOCATION" ];then
	rofi_cmd() {
		rofi -dmenu -i $3 -theme "$RASI_DIR" -theme-str 'textbox-prompt-colon{str:"'$PROMPT':";}'"$4"''
	}
else
	rofi_cmd() {
		{ [[ -n "${1}" ]] && WIDTH=$(echo -e "$1" | awk '{print length}' | sort -n | tail -1) && ((WIDTH += $2)) && ((WIDTH = WIDTH / 2)); } || { ((WIDTH = $2 / 2)); }
		rofi -dmenu -i -location "$LOCATION" -yoffset "$Y_AXIS" -xoffset "$X_AXIS" $3 -theme "$RASI_DIR" -theme-str 'window{width: '$WIDTH'em;}textbox-prompt-colon{str:"'$PROMPT':";}'"$4"''
	}
fi

if [ -z "$QRCODE_LOCATION" ];then
	QRCODE_LOCATION=0
fi

SELECTED_BLUETOOTH_OPTIONS="${SELECTION_PREFIX}${SELECTION_BLUETOOTH_OPTIONS}"
if [ -d /sys/class/bluetooth ];then
	SELECTION_BLUETOOTH_OPTIONS="\n${SELECTED_BLUETOOTH_OPTIONS}"
else
	SELECTION_BLUETOOTH_OPTIONS=""
fi

main
