#!/bin/sh
set -e
CONKY_EMAIl_FILE="$GNUPGHOME/conkey_email"

IMAP_PORT=993

# Create encrypted credentials file
create_creds_file() {
  printf "Email: "
  read email
  passman add "email/$email"
  printf "%s" "$email" > "$CONKY_EMAIl_FILE"
  exit
}

# Print unread email count
print_unread_email_count() {
  if [ ! -f "$CONKY_EMAIl_FILE" ]; then
    Unread_Email_count="NaN"
    return
  fi

  EMAIL=$(cat "$CONKY_EMAIl_FILE")

  case "$EMAIL" in
    *gmail.com)   IMAP_SERVER="imap.gmail.com" ;;
    *outlook.com|*hotmail.com) IMAP_SERVER="imap-mail.outlook.com" ;;
    *)            IMAP_SERVER="imap.example.com" ;;
  esac
  if command -v curl >/dev/null 2>&1 ;then
		response=$(curl -s --url "imaps://$IMAP_SERVER/INBOX" \
			--request "SEARCH UNSEEN" \
			--user "$EMAIL:$(passman show email/$EMAIL)")
  elif command -v python3 >/dev/null 2>&1 ;then
		response=$(python3 -c "import imaplib; m=imaplib.IMAP4_SSL('$IMAP_SERVER'); m.login('$EMAIL', '''$PASSWORD'''); m.select('INBOX'); print(m.search(None, 'UNSEEN')[1][0].decode()); m.logout()")
  elif command -v python >/dev/null 2>&1 ;then
		response=$(python -c "import imaplib; m=imaplib.IMAP4_SSL('$IMAP_SERVER'); m.login('$EMAIL', '''$PASSWORD'''); m.select('INBOX'); print(m.search(None, 'UNSEEN')[1][0].decode()); m.logout()")
  fi

  [ $? -ne 0 ] && {
    Unread_Email_count="NaN"
    return
  }

  Unread_Email_count=$(echo "$response" | tr -cd '0-9 ' | wc -w)
  [ -z "$Unread_Email_count" ] && Unread_Email_count=0
}

case "$1" in
  --create|-c) create_creds_file ;;
  *) print_unread_email_count ;;
esac

printf '%s' "$Unread_Email_count"
