#!/bin/bash
#
# one off calculator
#simple calculatorüòÅ
unalias -a
#trignometry
sin ()
{
    echo "Sin($x)=$(echo "scale=5;s($x)" | bc -l)"
}

cos ()
{
    echo "Cos($x)=$(echo "scale=5;c($x)" | bc -l)"
}

tan ()
{
    echo "Tan($x)=$(echo "scale=5;s($x)/c($x)" | bc -l)"
}

cosine ()
{
    echo "Cosine($x)=$(echo "scale=5;1/s($x)" | bc -l)"
}

sec ()
{
    echo "Sec($x)=$(echo "scale=5;1/c($1)" | bc -l)"
}

cot ()
{
    echo "Cot($x)=$(echo "scale=5;c($x)/s($x)" | bc -l)"
}

asin ()
{
    if (( $(echo "$x == 1" | bc -l) ));then
       echo "90"   
    elif (( $(echo "$x < 1" | bc -l) ));then
       echo "scale=3;a(sqrt((1/(1-($x^2)))-1))" | bc -l
    elif (( $(echo "$x > 1" | bc -l) ));then
       echo "error"
    fi
}

acos ()
{
    if (( $(echo "$x == 0" | bc -l) ));then
       echo "90"
    elif (( $(echo "$x <= 1" | bc -l) ));then
       echo "scale=3;a(sqrt((1/($x^2))-1))" | bc -l
    elif (( $(echo "$x > 1" | bc -l) ));then
       echo "error"
    fi
}

atan ()
{
    echo "scale=3;a($x)" | bc -l
}

acot ()
{
    echo "scale=5;a(1/$x)" | bc -l
}

asec ()
{
    echo "scale=5;a(sqrt(($x^2)-1))" | bc -l
}

acosine ()
{
    echo "scale=5;a(1/(sqrt($x^2)-1))" | bc -l
}

Usage_bc(){
cat << EOF
	Usage:
	###################
	# addition
	$0 5+3                                                
	8
	
	# multiplication
	$0 '4*2'
	8
	
	# subtraction
	$0 -4-2
	-6
	
	# division
	$0 4/2
	2.00000000000000000000
	
	# square root 
	$0 "scale=30; sqrt(2)"
	1.414213562373095048801688724209
	
	# power
	$0 "6^6"
	46656
	
	# parentheses
	$0 "(6^6)^6"
	10314424798490535546171949056
	
	# convert from decimal to hexadecimal 
	$0 "obase=16; 255"
	FF
	
	# convert from decimal to binary 
	$0 "obase=2; 12"
	1100
	
	# convert from binary to decimal 
	$0 "ibase=2; obase=A;1100"
	12
	
	# convert from hexadecimal to decimal 
	$0 "ibase=16; obase=A;FF"
	255
	
	# arctangent
	$0 "a(1)"
	.78539816339744830961
	
	# PI value
	$0 "scale=10; 4*a(1)"
	3.1415926532
	
	# more complex
	$0 "scale=2; 3.4+7/8-(5.94*(4*a(1)))"
	-14.26
EOF
}

Usage_bash(){
cat << EOF
	Usage:
	###################
	A calculator written in pure bash.
	
	$0 100*50
	5000
	
	$0  1000/100
	10
	
	$0 100+100+100+100
	400
	
	$0 9-1-2-3-4
	-1
	
	$0 '(100+50)/2'
	75
	
	$0 '(100+50)+2^2'
	154

EOF
}

HELP_(){
	if command -v bc >/dev/null 2>&1;then
		Usage_bc
	else
		Usage_bash
	fi
}
#-------------------------------------------------------------------------------------------------------------------------------------------------
for i in "$@"
do
    case "$i" in
    -h|--help)
        HELP_
        exit 0
        ;;
    esac
done
if command -v bc >/dev/null 2>&1;then
	if [[ -z "$1" ]];then
		clear
		
		echo -e " \e[1;31m                   [[  üëâ My Calculator!, Version-2.0.0 üëà ]] \e[0m "
		
		
		while [ 1  ]
			
		do
		echo -e "---------------------------------------------------------------------------------------"
		echo -e "\e[1;34m                   TO Exit Type 'q' Or Press CTRL+C and enter\e[0m"
		echo -e "\e[1;36m ________________________________________________________\e[0m"
		echo -e "\e[1;36m Your's Option:| Algebric | Trigonometric | \e[0m"
		
		read -p "Option: " op1
		if [[ "$op1" = 'q' || "$op1" = 'Q' ]]
		then
		break
		elif [[ ( ( "$op1" = 'A' || "$op1" = 'a' ) || ( "$op1" = 'Algebric' || "$op1" = 'algebric' ) ) || "$op1" = 'algeb' ]]
		then 
  		clear
  		echo -e "Algebric Option"
  		echo -e "\e[1;36m |Enter a operation: root | + | - | / | x | ^ | rem | % |\e[0m"
  		echo -e "\e[1;34m --------------------------------------------------------\e[0m"
  		echo -e " \e[1;3;5;31m >>> \e[0m"
  		read -p  "Option:" op
  		if [ "$op" = 'q' ]
		then
			break
		elif [ "$op" = 'root' ]
		then
			read -p "Enter a number:" x
			echo -e " \e[1;33m  sqrt($x)=$(echo "sqrt(9)" | bc) \e[0m"
		else
		read -p " Enter first number: " v1
		
		read -p " Enter second number: " v2
		if   [ "$op" = '+' ]
		then
			echo -e " \e[1;33m #$v1+$v2=$(echo "scale=5;$v1 + $v2 " | bc) \e[0m"
		elif [ "$op" = '-' ]
		then
			echo -e "\e[1;33m #$v1-$v2=$(echo "scale=5;$v1 - $v2" | bc) \e[0m"
		elif [ "$op" = 'x' ]
		then
			echo -e "\e[1;33m #$v1 X $v2=$(echo "scale=5;$v1 * $v2" | bc) \e[0m"
		elif [ "$op" = '/' ] 
		then
			echo -e "\e[1;33m #$v1/$v2=$(echo " scale=5;$v1 / $v2 " | bc) \e[0m"
		elif [ "$op" = '^' ]
		then
			echo -e "\e[1;33m #$v1^$v2=$(echo "scale=5;$v1 ^ $v2  " | bc) \e[0m"
		elif [ "$op" = 'rem' ]
		then
			echo -e "\e[1;33m #remainder:$(echo "scale=5;$v1 % $v2 " | bc)\e[0m"
		elif [ "$op" = '%' ] 
		then
			a=$(echo "scale=2;( $v1 * 100 ) / $v2 " | bc)
			echo -e "\e[1;33m #$v1 is $a% of $v2 \e[0m"
		else
       		echo -e " \e[1;31m #Invalid option! \e[0m "
		fi
		fi
		
		
		elif [[ "$op1" = 'T' || "$op1" = 't' || "$op1" = 'trigonometric' || "$op1" = 'Trigonometric' ]]
		echo "Trigonometric"
		then
  		clear
  		echo -e "\e[1;36m |Enter a operation: | sin | cos | tan | cosine | sec | cot | asin | acos | atan | acosine | asec | acot | \e[0m"
  		echo -e "\e[1;34m --------------------------------------------------------------------------------------------------------\e[0m"
  		echo -e " \e[1;3;5;31m >>> \e[0m"
  		read -p  "Option:" op
  		read -p "Angle: " z
  		read -p "degre or radian: " u
  		
   		if [[ "$u" = 'degre' || "$u" = 'd' || "$u" = 'deg' || "$u" = 'degree' || "$u" = 'D' || "$u" = 'Degre' ]]
   		then
    		pi=3.14159
    		t=$(echo "scale=5;$z * $pi" | bc )
    		t1=$(echo "scale=5;$t / 180.0" | bc )
    		x=$t1
    		echo "angle:$x radiun"
   		elif [[ "$u" = 'r' || "$u" = 'R' || "$u" = 'rad' || "$u" = 'Rad' || "$u" = 'radian' || "$u" = 'Radian' ]]
   		then
    		echo "Angle:$z radiun"
   		else
    		echo "No unit for angle"
   		fi
		
   		if [[ "$op" = 'sin' ]]
   		then
    		sin
   		elif [[ "$op" = 'cos' ]]
   		then
    		cos
   		elif [[ "$op" = 'tan' ]]
   		then
    		tan
   		elif [[ "$op" = 'cosine' ]]
   		then
    		cosine
   		elif [[ "$op" = 'sec' ]]
   		then
    		sec
   		elif [[ "$op" = 'cot' ]]
   		then
    		cot;
   		else
     		read -p "Enter the value: " x
     		if [[ "$op" = 'asin' ]]
     		then
       		asin
     		elif [[ "$op" = 'acos' ]]
     		then
       		acos
     		elif [[ "$op" = 'atan' ]]
     		then
       		atan
     		elif [[ "$op" = 'acosine' ]]
     		then
       		acosine
     		elif [[ "$op" = 'asec' ]]
     		then
     		asec
     		elif [[ "$op" = 'acot' ]]
     		then
     		acot
     		else
      		echo "Sorry!Wrong Option."
     		fi
   		fi 
    		
  		
 		
		
		else 
		echo -e "\e[1;31m You typed Wrong Option!!!!! \e[0m"
		fi
		done
	else
		bc -l <<< "$@"
	fi
else
	echo "$(($@))"
fi
