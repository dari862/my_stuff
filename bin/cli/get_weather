#!/bin/sh
# work on this : Doppler not working
set -e

__opt="${1-}"
__opt2="${2-}"
. "$__distro_path_lib"
. "${__distro_path_root}/lib/common/WM"
. "${__distro_path_root}/lib/common/common"
show_Extra=false
__weather_lib_path="${__distro_path_root}/bin/not_add_2_path/weather"

fix_weather_script_config_var(){
	say "set place var in $weather_script_config_path" 'green'
	# Geolocate IP:
   	passed_place="${__opt2}"
   	if [ -z "$passed_place" ];then
   		passed_place=$(get_geolocation)
   		if [ -z "$passed_place" ];then
   			failed_to_run "get_weather fix_weather_script_config_var second arg are empty"
   		fi
   	fi
   	chosen="$(grep "$passed_place" "${__weather_lib_path}/country_list")"
	
	# Set continent code and radar code.
	continentcode=$(printf "%s" "$chosen" | cut -d':' -f1 | tr "[:lower:]" "[:upper:]")
	radarcode=$(printf "%s" "$chosen" | cut -d' ' -f2 | cut -d':' -f1 | tr '[:lower:]' '[:upper:]')
	place=$(printf "%s" "$chosen" | cut -d':' -f3 | cut -f1 -d',' | sed 's/^ //')
	place="${place:-$radarcode}" # Default place to radarcode if not set

	sed -i "s|continentcode=.*|continentcode=\"$continentcode\"|" "${weather_script_config_path}" || failed_to_run "get_weather fix_weather_script_config_var failed at continentcode"
	sed -i "s|radarcode=.*|radarcode=\"$radarcode\"|" "${weather_script_config_path}" || failed_to_run "get_weather fix_weather_script_config_var failed at radarcode"
	sed -i "s|place=.*|place=\"$place\"|" "${weather_script_config_path}" || failed_to_run "get_weather fix_weather_script_config_var failed at place"
}

get_moon_phase() { 
	# Moon Phase should be updated only once a day.
	if [ ! -f "$moonfile" ] || [ "$(stat -c %y "$moonfile" 2>/dev/null | cut -d' ' -f1)" != "$(date +'%Y-%m-%d')" ];then
		getURL '2term' "${WTTRURL}/${place}?format=%m" > "$moonfile" || echo "[ERROR] $0 : failed to run get_moon_phase"
	fi
	cat "$moonfile" && echo ""
}

getdoppler() {
	if [ -s "$doppler" ] && [ $(($(date +'%s') - $(stat -c %Y "$doppler"))) -le "$secs" ];then
		return
	fi
	case "$continentcode" in
		"US") getURL '2term' "https://radar.weather.gov/ridge/standard/${radarcode}_loop.gif" > "$doppler" ;;
		"EU") getURL '2term' "https://api.sat24.com/animated/${radarcode}/rainTMC/2/" > "$doppler" ;;
		"AF") getURL '2term' "https://api.sat24.com/animated/${radarcode}/rain/2/" > "$doppler" ;;
		"DE") radarcode="$(echo "$radarcode" | tr "[:upper:]" "[:lower:]")"
				getURL '2term' "https://www.dwd.de/DWD/wetter/radar/radfilm_${radarcode}_akt.gif" > "$doppler" ;;
	esac
}

main() {	
	if old_weather_data_;then
		connectiontest 10 icon && get_weather_data_ >/dev/null 2>&1
	fi

	if [ "$__opt" = "-m" ];then
		get_weather_report_more
	elif [ "$__opt" = "-v" ];then
		parse_weather_for_conky_vision
	else
		get_weather_report_less
		if [ "$show_Extra" = true ];then
			scaleT=""
			weather_ICON=""
			weather_TEXT=""
		fi
		if  [ "$__opt" = "-i" ];then
   			echo "${weather_ICON} ${WEATHER_TEMP}${scaleT}"
   		elif  [ "$__opt" = "-t" ];then
   			echo "${weather_description}"
		elif  [ "$__opt" = "-d" ];then
   			echo "${weather_TEXT} ${WEATHER_TEMP}${scaleT}"
   		elif  [ "$__opt" = "-n" ];then
   			printf "%s %s%s \n %s \n" "${weather_ICON}" "${WEATHER_TEMP}" "${scaleT}" "${weather_description}"
   		fi
	fi
}

if [ "$__opt" = "--global" ];then
	weather_script_config_path="${__distro_path_root}/system_files/skel/.config/scriptconfig/weather"
	. "$weather_script_config_path"
	
	if [ -z "$place" ];then
   		fix_weather_script_config_var
	fi
	
	exit 0
else
	weather_script_config_path="${script_config_path}/weather"
	if [ ! -f "$weather_script_config_path" ];then
		cp -r "${__distro_path_root}/system_files/skel/.config/scriptconfig/weather" "${script_config_path}"
	fi
	
	. "$weather_script_config_path"
		
	if [ -z "$place" ];then
   		fix_weather_script_config_var
	fi	
fi

if [ "$__opt" = "moon" ];then
	connectiontest 10 icon && get_moon_phase
elif [ "$__opt" = "doppler" ];then
	connectiontest 10 icon && getdoppler
fi

if [ "$mode" = "auto" ];then
	if myAPIman check openweather >/dev/null 2>&1;then
		mode="openweather"
	else
		mode="wttr"
	fi
fi

if [ "$mode" = "wttr" ];then
	weatherreport="$wttr_weatherreport"
elif [ "$mode" = "openweather" ];then
	weatherreport="$ow_weatherreport"
fi

[ "$__opt2" = "extra" ] && show_Extra=true

mkdir -p "$weather_script_data_path" || echo "[ERROR] $0 : mkdir -p $weather_script_data_path"

if [ "$units" = "metric" ];then
   	scaleT="°C"
   	scaleV="m/s"
else
   	scaleT="°F"
   	scaleV="mph"
fi

if [ "$mode" = "wttr" ];then
	. "${__weather_lib_path}/wttr"
	main
elif [ "$mode" = "openweather" ];then
	. "${__weather_lib_path}/openweather"
	main
fi
