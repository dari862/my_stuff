#!/bin/bash

set -euo pipefail

check_4_dependencies_if_installed qpdf || exit 1

usage() {
  cat <<EOF
Usage:

  Extract pages:
    $0 extract input.pdf page_range

  Merge PDFs:
    $0 merge output.pdf input1.pdf [input2.pdf ...]

  Encrypt PDF:
    $0 encrypt input.pdf

Examples:
  $0 extract input.pdf 3-7
  $0 merge merged.pdf part1.pdf part2.pdf
  $0 encrypt confidential.pdf

EOF
  exit 1
}

prompt_password() {
  local prompt_msg="$1"
  local pw
  read -rsp "$prompt_msg" pw
  echo
  printf "%s" "$pw"
}

check_file_exists() {
  if [ ! -f "$1" ]; then
    echo "‚ùå File not found: $1"
    exit 1
  fi
}

is_encrypted() {
  qpdf --show-encryption "$1" &>/dev/null
}

handle_extract() {
  local INPUT="$1"
  local PAGES="$2"

  check_file_exists "$INPUT"

  local BASENAME="${INPUT%.*}"
  local OUTPUT="${BASENAME}_extracted.pdf"

  if [ -f "$OUTPUT" ]; then
    echo "‚ö†Ô∏è Output file '$OUTPUT' already exists. Overwrite? (y/N)"
    read -r confirm
    [[ "$confirm" != "y" ]] && exit 1
  fi

  if is_encrypted "$INPUT"; then
	PASSWORD=$(prompt_password "üîê Enter password for encrypted PDF: ")
    qpdf --password="$PASSWORD" "$INPUT" --pages "$INPUT" "$PAGES" -- "$OUTPUT"
  else
    qpdf "$INPUT" --pages "$INPUT" "$PAGES" -- "$OUTPUT"
  fi

  echo "‚úÖ Extracted pages [$PAGES] to '$OUTPUT'"
}

handle_merge() {
  local INPUTS=("$@")
  first_file="$1"
  name="${first_file%.*}"
  OUTPUT_PDF="${name}_merged.pdf"

  for f in "${INPUTS[@]}"; do
    check_file_exists "$f"
  done

  if [ -f "$OUTPUT" ]; then
    echo "‚ö†Ô∏è Output file '$OUTPUT' already exists. Overwrite? (y/N)"
    read -r confirm
    [[ "$confirm" != "y" ]] && exit 1
  fi

  qpdf --empty --pages "${INPUTS[@]}" -- "$OUTPUT"
  echo "‚úÖ Merged PDFs into '$OUTPUT'"
}

handle_encrypt() {
  local INPUT="$1"
  check_file_exists "$INPUT"

  local BASENAME="${INPUT%.*}"
  local OUTPUT="${BASENAME}_encrypted.pdf"

  if [ -f "$OUTPUT" ]; then
    echo "‚ö†Ô∏è Output file '$OUTPUT' already exists. Overwrite? (y/N)"
    read -r confirm
    [[ "$confirm" != "y" ]] && exit 1
  fi

  USER_PW=$(prompt_password "üîí Enter user password: ")
  OWNER_PW=$(prompt_password "üîí Enter owner password: ")

  if [ -z "$USER_PW" ] || [ -z "$OWNER_PW" ]; then
    echo "‚ùå Both user and owner passwords are required."
    exit 1
  fi

  qpdf --encrypt "$USER_PW" "$OWNER_PW" 256 -- "$INPUT" "$OUTPUT"
  echo "üîê Encrypted '$INPUT' as '$OUTPUT'"
}


# Entry Point
if [ "$#" -lt 2 ]; then
  usage
fi

COMMAND="$1"
shift

case "$COMMAND" in
  extract)
    [ "$#" -ne 2 ] && usage
    handle_extract "$@"
    ;;
  merge)
    [ "$#" -lt 2 ] && usage
    handle_merge "$@"
    ;;
  encrypt)
    [ "$#" -ne 1 ] && usage
    handle_encrypt "$1"
    ;;
  *)
    usage
    ;;
esac

