#!/bin/bash
# if this line exist script will be part of hub script.

#set -euo pipefail
unalias -a
opt_="${1-}"

Let_it_Rain_screensaver_(){
	# Let it Rain!
	# Copyright (C) 2011, 2013 by Yu-Jie Lin
	#
	# Permission is hereby granted, free of charge, to any person obtaining a copy
	# of this software and associated documentation files (the "Software"), to deal
	# in the Software without restriction, including without limitation the rights
	# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	# copies of the Software, and to permit persons to whom the Software is
	# furnished to do so, subject to the following conditions:
	#
	# The above copyright notice and this permission notice shall be included in
	# all copies or substantial portions of the Software.
	#
	# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	# THE SOFTWARE.
	#
	# Blog: http://blog.yjl.im/2013/07/let-it-rain.html
	# Gist: https://gist.github.com/livibetter/5933594
	# Gif : https://lh5.googleusercontent.com/-0WJ1vSZcFPs/UdadOwdPEXI/AAAAAAAAE-c/6kuH9hP3cUo/s800/rain.sh.gif
	# Clip: http://youtu.be/EssRgAh2w_c
	#
	# Modified from falling-<3s.sh:
	#   http://blog.yjl.im/2011/02/time-to-have-falling-hearts-screensaver.html
 	
	RAINS=("|" "│" "┃" "┆" "┇" "┊" "┋" "╽" "╿")
	COLORS=("\e[37m" "\e[37;1m")
	# More from 256 color mode
	for i in {244..255}; do
  	COLORS=("${COLORS[@]}" "\e[38;5;${i}m")
	done
	NRAINS=${#RAINS[@]}
	NCOLORS=${#COLORS[@]}
	NUM_RAIN_METADATA=5
 	
 	
	sigwinch() {
  	TERM_WIDTH=$(tput cols)
  	TERM_HEIGHT=$(tput lines)
  	STEP_DURATION=0.025
  	((MAX_RAINS = TERM_WIDTH * TERM_HEIGHT / 4))
  	((MAX_RAIN_LENGTH = TERM_HEIGHT < 10 ? 1 : TERM_HEIGHT / 10))
  	# In percentage
  	((NEW_RAIN_ODD = TERM_HEIGHT > 50 ? 100 : TERM_HEIGHT * 2))
  	((NEW_RAIN_ODD = NEW_RAIN_ODD * 75 / 100))
  	((FALLING_ODD = TERM_HEIGHT > 25 ? 100 : TERM_HEIGHT * 4))
  	((FALLING_ODD = FALLING_ODD * 90 / 100))
  	}
 	
	do_exit() {
  	echo -ne "\e[${TERM_HEIGHT};1H\e[0K"
 	
  	# Show cursor and echo stdin
  	echo -ne "\e[?25h"
  	stty echo
  	exit 0
  	}
 	
	do_render() {
  	# Clean screen first
  	for ((idx = 0; idx < num_rains * NUM_RAIN_METADATA; idx += NUM_RAIN_METADATA)); do
    	X=${rains[idx]}
    	Y=${rains[idx + 1]}
    	LENGTH=${rains[idx + 4]}
    	for ((y = Y; y < Y + LENGTH; y++)); do
      	(( y < 1 || y > TERM_HEIGHT )) && continue
      	echo -ne "\e[${y};${X}H "
    	done
  	done
 	
  	for ((idx = 0; idx < num_rains * NUM_RAIN_METADATA; idx += NUM_RAIN_METADATA)); do
    	if ((100 * RANDOM / 32768 < FALLING_ODD));then
      	# Falling
      	if ((++rains[idx + 1] > TERM_HEIGHT));then
        	# Out of screen, bye sweet <3
        	rains=("${rains[@]:0:idx}"
               	"${rains[@]:idx+NUM_RAIN_METADATA:num_rains*NUM_RAIN_METADATA}")
        	((num_rains--))
        	continue
      	fi
    	fi
    	X=${rains[idx]}
    	Y=${rains[idx + 1]}
    	RAIN=${rains[idx + 2]}
    	COLOR=${rains[idx + 3]}
    	LENGTH=${rains[idx + 4]}
    	for ((y = Y; y < Y + LENGTH; y++)); do
      	(( y < 1 || y > TERM_HEIGHT )) && continue
      	echo -ne "\e[${y};${X}H${COLOR}${RAIN}"
    	done
  	done
  	}
 	
	trap do_exit TERM INT
	trap sigwinch WINCH
	# No echo stdin and hide the cursor
	stty -echo
	echo -ne "\e[?25l"
 	
	echo -ne "\e[2J"
	rains=()
	sigwinch
	while :; do
  	read -n 1 -t $STEP_DURATION ch
  	case "$ch" in
    	q|Q)
      	do_exit
      	;;
  	esac
 	
  	if ((num_rains < MAX_RAINS)) && ((100 * RANDOM / 32768 < NEW_RAIN_ODD));then
    	# Need new |, 1-based
    	RAIN="${RAINS[NRAINS * RANDOM / 32768]}"
    	COLOR="${COLORS[NCOLORS * RANDOM / 32768]}"
    	LENGTH=$((MAX_RAIN_LENGTH * RANDOM / 32768 + 1))
    	X=$((TERM_WIDTH * RANDOM / 32768 + 1))
    	Y=$((1 - LENGTH))
    	rains=("${rains[@]}" "$X" "$Y" "$RAIN" "$COLOR" "$LENGTH")
    	((num_rains++))
  	fi
 	
  	# Let rain fall!
  	do_render
	done
}

pipes_screensaver_(){
	# The author of the original script is unknown to me. The first entry I can
	# find was posted at 2010-03-21 09:50:09 on Arch Linux Forums (doesn't mean the
	# poster is the author at all):
	#
	#   https://bbs.archlinux.org/viewtopic.php?pid=728932#p728932
	#
	# I, Yu-Jie Lin, made a few changes and additions:
	#
	#   -p, -t, -R, and -C
	#
	#   Screenshot: http://flic.kr/p/dRnLVj
	#   Screencast: http://youtu.be/5XnGSFg_gTk
	#
	# And push the commits to Gist:
	#
	#   https://gist.github.com/4689307
	#
	# I, Devin Samarin, made a few changes and additions:
	#
	#   -r can be 0 to mean "no limit".
	#   Reset cursor visibility after done.
	#   Cleanup for those people who want to quit with ^C
	#
	#   Pushed the changes to https://gist.github.com/4725048
	
	p=1
	f=75 s=13 r=2000 t=0
	w=$(tput cols) h=$(tput lines)
	# ab -> idx = a*4 + b
	# 0: up, 1: right, 2: down, 3: left
	# 00 means going up   , then going up   -> ┃
	# 12 means going right, then going down -> ┓
	sets=(
    	"┃┏ ┓┛━┓  ┗┃┛┗ ┏━"
    	"│╭ ╮╯─╮  ╰│╯╰ ╭─"
    	"│┌ ┐┘─┐  └│┘└ ┌─"
    	"║╔ ╗╝═╗  ╚║╝╚ ╔═"
	)
	v="${sets[0]}"
	RNDSTART=0
	NOCOLOR=0
	
	OPTIND=1
	while getopts "p:t:f:s:r:RCh" arg; do
	case $arg in
    	p) ((p=(OPTARG>0)?OPTARG:p));;
    	t) ((OPTARG>=0 && OPTARG<${#sets[@]})) && v="${sets[OPTARG]}";;
    	f) ((f=(OPTARG>19 && OPTARG<101)?OPTARG:f));;
    	s) ((s=(OPTARG>4 && OPTARG<16 )?OPTARG:s));;
    	r) ((r=(OPTARG>=0)?OPTARG:r));;
    	R) RNDSTART=1;;
    	C) NOCOLOR=1;;
    	h) echo -e "Usage: $(basename $0) [OPTION]..."
        	echo -e "Animated pipes terminal screensaver.\n"
        	echo -e " -p [1-]\tnumber of pipes (D=1)."
        	echo -e " -t [0-$((${#sets[@]} - 1))]\ttype of pipes (D=0)."
        	echo -e " -f [20-100]\tframerate (D=75)."
        	echo -e " -s [5-15]\tprobability of a straight fitting (D=13)."
        	echo -e " -r LIMIT\treset after x characters, 0 if no limit (D=2000)."
        	echo -e " -R \t\trandom starting point."
        	echo -e " -C \t\tno color."
        	echo -e " -h\t\thelp (this screen).\n"
        	exit 0;;
    	esac
	done
	
	cleanup() {
    	tput rmcup
    	tput cnorm
    	exit 0
	}
	trap cleanup SIGHUP SIGINT SIGTERM
	
	for (( i=1; i<=p; i++ )); do
    	c[i]=$((i%8)) n[i]=0 l[i]=0
    	((x[i]=RNDSTART==1?RANDOM*w/32768:w/2))
    	((y[i]=RNDSTART==1?RANDOM*h/32768:h/2))
	done
	
	tput smcup
	tput reset
	tput civis
	while ! read -t0.0$((1000/f)) -n1; do
    	for (( i=1; i<=p; i++ )); do
        	# New position:
        	((${l[i]}%2)) && ((x[i]+=-${l[i]}+2,1)) || ((y[i]+=${l[i]}-1))
	
        	# Loop on edges (change color on loop):
        	((${x[i]}>w||${x[i]}<0||${y[i]}>h||${y[i]}<0)) && ((c[i]=RANDOM%8))
        	((x[i]=(x[i]+w)%w))
        	((y[i]=(y[i]+h)%h))
	
        	# New random direction:
        	((n[i]=RANDOM%s-1))
        	((n[i]=(${n[i]}>1||${n[i]}==0)?${l[i]}:${l[i]}+${n[i]}))
        	((n[i]=(${n[i]}<0)?3:${n[i]}%4))
	
        	# Print:
        	tput cup ${y[i]} ${x[i]}
        	[[ $NOCOLOR == 0 ]] && echo -ne "\033[1;3${c[i]}m"
        	echo -n "${v:l[i]*4+n[i]:1}"
        	l[i]=${n[i]}
    	done
    	((r>0 && t*p>=r)) && tput reset && tput civis && t=0 || ((t++))
	done
	
	cleanup
}

help(){
	echo "--pipes or -p for pipes screensaver"
	echo "--pipes or -r for Let it Rain screensaver"
	echo "--help or -h  for help menu"
	echo "no arg for will default to pipes screensaver"
}

on_terminal(){
	if [ ! -t 1 ];then
   		return 1
   	fi
}

if on_terminal;then
	case $opt_ in
		--pipes|-p) pipes_screensaver_ ;;
		--rain|-r) Let_it_Rain_screensaver_ ;;
		-h|--help) help ;;
		*) pipes_screensaver_ ;;
	esac
else	
	case $opt_ in
		--pipes|-p) popup_terminal --full "sleep 0.5; $0 -p" ;;
		--rain|-r) popup_terminal --full "sleep 0.5; $0 -r" ;;
		-h|--help) help ;;
		*) popup_terminal --full "sleep 0.5; $0" ;;
	esac
fi
