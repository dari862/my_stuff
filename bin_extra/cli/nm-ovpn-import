#!/bin/bash
set -euo pipefail
unalias -a
. "$__distro_path_lib"
"${__distro_path_root}/bin/not_add_2_path"/check_4_dependencies_if_installed grep nmcli || exit 1

trap 'unset VPN_PASS' EXIT

show_error() {
  local red=$'\033[0;91m'
  local nc=$'\033[0m'
  if [[ "${1:--e}" =~ ^(-e|-n)$ ]];then
    echo "${1:--e}" "${red}${*:2}${nc}" 1>&2
  else
    echo -e "${red}${*}${nc}" 1>&2
  fi
}

show_info() {
  local green=$'\033[0;92m'
  local nc=$'\033[0m'
  if [[ "${1:--e}" =~ ^(-e|-n)$ ]];then
    echo "${1:--e}" "${green}${*:2}${nc}"
  else
    echo -e "${green}${*}${nc}"
  fi
}

ask_question() {
  local blue=$'\033[0;94m'
  local nc=$'\033[0m'
  local var
  read -r -p "${blue}$*${nc} " var
  echo "${var}"
}

ask_password() {
  local blue=$'\033[0;94m'
  local nc=$'\033[0m'
  local var
  read -rs -p "${blue}$*${nc} " VPN_PASS
}

show_success() {
  local purple=$'\033[0;95m'
  local nc=$'\033[0m'
  if [[ "${1:--e}" =~ ^(-e|-n)$ ]];then
    echo "${1:--e}" "${purple}${*:2}${nc}"
  else
    echo -e "${purple}${*}${nc}"
  fi
}

# Script requires nm-cli, so check that the Network Manager service is running.
if ! service_manager is-active NetworkManager;then
  show_info "Enabling Network Manager systemd service."
  service_manager enable NetworkManager
fi

# Check that the input files exist.
for VPN_CONFIG in "${@}"; do
  if ! [ -f "${VPN_CONFIG}" ];then
    show_error "ERROR: config ${VPN_CONFIG} not found. Exiting."
    exit 3
  fi
done

TMP_DIR="$(mktemp -d)"
mkdir -p "${TMP_DIR}"
trap 'rm -rf "${TMP_DIR}"; exit' INT TERM ERR EXIT

set +x

# Prompt for the VPN username.
VPN_USER=$(ask_question "Username:")
ask_password
echo

for VPN_CONFIG in "$@"; do
  if [[ "${VPN_CONFIG}" =~ \.ovpn$ ]];then
    VPN_NAME="${VPN_CONFIG%.*}"
  else
    VPN_NAME="${VPN_CONFIG}"
  fi

  # Delete any existing VPN configuration.
  if grep -q "${VPN_NAME}" <(nmcli conn show);then
    show_info "Deleting existing OVPN config for ${VPN_NAME}..."
    nmcli connection delete "${VPN_NAME}"
    # ask_question "Delete existing OVPN config? (y/N)" REPLY
    # if [[ "${REPLY}" =~ ^([Yy]$|[Yy][Ee][Ss]$) ]];then
    #   nmcli connection delete "${VPN_NAME}"
    # fi
  fi

  # Import the ovpn configs and set the username.
  cp "${VPN_CONFIG}" "${TMP_DIR}/${VPN_NAME}"
  nmcli connection import type openvpn file "${TMP_DIR}/${VPN_NAME}"
  nmcli connection modify "${VPN_NAME}" +vpn.data "username = ${VPN_USER}"
  if [[ -n "${VPN_PASS}" ]];then
      nmcli connection modify "${VPN_NAME}" +vpn.secrets "$(cat <<EOF
password=${VPN_PASS}
EOF
)"
  fi
done

unset VPN_PASS
show_success "Done!"
