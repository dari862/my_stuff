#!/bin/sh
my-installer --install-needed "GPU" || continue

app_name="Gaming Essential"
. "/usr/share/my_stuff/os-release"
distro_name_and_ver_3=$(printf "%s" "$distro_name_and_ver_2" | cut -c1 | tr '[:lower:]' '[:upper:]')$(printf "%s" "$distro_name_and_ver_2" | cut -c2-)

SHELL_EXT="$(which gnome-shell >/dev/null 2>&1 && echo gnome-shell-extension-gamemode)"

say 'add new repo ...' 1
[ ! -d "/etc/apt/keyrings" ] && my-superuser mkdir -pm755 /etc/apt/keyrings
if ! dpkg -q lutris 2>/dev/null;then
	download_key "gpg" "https://download.opensuse.org/repositories/home:/strycore/$distro_name_and_ver_3/Release.key" "/usr/share/keyrings/lutris.gpg"
	echo "deb [signed-by=/usr/share/keyrings/lutris.gpg] https://download.opensuse.org/repositories/home:/strycore/$distro_name_and_ver_3/ ./" | my-superuser tee /etc/apt/sources.list.d/lutris.list > /dev/null 2>&1
fi

if ! dpkg -q winehq-staging 2>/dev/null;then
	download_key "download" "https://dl.winehq.org/wine-builds/winehq.key" "/etc/apt/keyrings/winehq-archive.key"
	download_key "download" "https://dl.winehq.org/wine-builds/debian/dists/${version_codename}/winehq-${version_codename}.sources" "/etc/apt/sources.list.d/winehq-${version_codename}.sources"
fi

if ! dpkg -q steam-launcher 2>/dev/null;then
	download_key "download" "https://repo.steampowered.com/steam/archive/stable/steam.gpg" "/usr/share/keyrings/steam.gpg"
	my-superuser tee /etc/apt/sources.list.d/steam-stable.list <<- 'EOF' >/dev/null 2>&1
	deb [arch=amd64,i386 signed-by=/usr/share/keyrings/steam.gpg] https://repo.steampowered.com/steam/ stable steam
	deb-src [arch=amd64,i386 signed-by=/usr/share/keyrings/steam.gpg] https://repo.steampowered.com/steam/ stable steam
	EOF
fi

my-superuser dpkg --add-architecture i386

clear
Package_update_

Package_installer_ libcec6 xboxdrv || continue     
Package_installer_ mangohud goverlay gamemode $SHELL_EXT lutris || continue                
Package_installer_ --install-recommends winehq-staging || continue     
Package_installer_ wine wine64 wine-binfmt || continue     

Package_installer_ libavcodec59 steam-installer mesa-vulkan-drivers libglx-mesa0:i386 mesa-vulkan-drivers:i386 libgtk2.0-0:i386 dnsmasq resolvconf || continue     
Package_installer_ libgl1-mesa-dri:amd64 libgl1-mesa-dri:i386  libgl1-mesa-glx:amd64 libgl1-mesa-glx:i386 steam-launcher || continue     
my-superuser service dnsmasq restart || continue     
my-superuser service resolvconf restart || continue     
my-superuser mkdir -p "/usr/share/my_stuff/system_files/skel/Desktop" || continue     
my-superuser ln -s ${_GAMING_EXTRA_LIBDIR}/Steam_fix /usr/share/my_stuff/system_files/skel/Desktop || continue     
for d in /home/*/ ; do
   	[ "$(dirname "$d")" = "/home" ] && ! id "$(basename "$d")" >/dev/null 2>&1 && continue # Skip dirs that no are homes
	user_and_group=$(stat "$(dirname "$d/.config")" -c %u:%g)
	# Create config folders if no exists
	d="$d/Desktop/";  [ ! -d "$d" ] && my-superuser mkdir -v "$d" && my-superuser chown -R $user_and_group "$d"
	
	my-superuser ln -sf "${_GAMING_EXTRA_LIBDIR}/Steam_fix" "$d" && my-superuser chown $user_and_group "$d"/Steam_fix
done

flatpak_install "pupgui2" "net.davidotek.pupgui2" "nonflathub" || continue     
flatpak_install "bottles" "com.usebottles.bottles" "nonflathub" || continue     
flatpak_install "Flatseal" "com.github.tchx84.Flatseal" || continue     

say "Creating Check File (Gaming_ready)"
my-superuser rm -rf /usr/share/my_stuff/system_files/GPU_Drivers_ready
my-superuser touch /usr/share/my_stuff/system_files/Gaming_ready
/usr/share/my_stuff/bin/X11/pipemenu/create_pipemenu/preferences.sh || failed_to_run "failed to run create_pipemenu/preferences.sh"
